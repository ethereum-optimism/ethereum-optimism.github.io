name: Validate PR

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      issues: write
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v27

      - name: Validate token list
        run: |
          npm run validate ${{ steps.changed-files.outputs.all_changed_files }} 2> err.out 1> log.out

      - name: Read log message
        id: log-message
        uses: juliangruber/read-file-action@v1
        with:
          path: ./log.out
        
      - name: Comment on manual review
        uses: actions/github-script@v5
        with:
          script: |
            if (`${{ steps.log-message.outputs.content }}`.includes('requires manual review')) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `This PR requires manual review. A maintainer will review this PR soon! ❤️`
              })
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['requires-manual-review']
              })
            }

      - name: Read failure message
        if: ${{ failure() }}
        id: failure-message
        uses: juliangruber/read-file-action@v1
        with:
          path: ./err.out

      - name: Comment on failure
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `We detected an issue with the files added in this PR. Please see the reported error message below:\n\n${{ steps.failure-message.outputs.content }}`
            })
